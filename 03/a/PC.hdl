// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // choose between reset and load
    Not(in=reset, out=notreset);
    And(a=load, b=notreset, out=loadandnotreset);
    Mux16(a=false, b=in, sel=loadandnotreset, out=outresetorload);

    // choose between above result and inc
    Inc16(in=outt, out=outinc);
    Not(in=load, out=notload);
    And(a=inc, b=notload, out=incandnotload);
    And(a=incandnotload, b=notreset, out=incandnotloadandnotreset);
    Mux16(a=outresetorload, b=outinc, sel=incandnotloadandnotreset, out=outincorload);

    // delay output
    Or(a=load, b=inc, out=loadorinc);
    Or(a=loadorinc, b=reset, out=loadorincorreset);
    Register(in=outincorload, load=loadorincorreset, out=out, out=outt);
}
