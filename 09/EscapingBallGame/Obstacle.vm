function Obstacle.init 0
push constant 245
pop static 0
push constant 0
return
function Obstacle.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
call Obstacle.draw 1
pop temp 0
push pointer 0
return
function Obstacle.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Obstacle.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 10
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Obstacle.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push constant 10
add
push constant 1
sub
push this 0
push this 2
add
push this 1
push constant 10
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 2
sub
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 1
add
call Screen.drawRectangle 4
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 10
add
call Screen.drawRectangle 4
pop temp 0
push static 0
pop this 1
push pointer 0
call Obstacle.draw 1
pop temp 0
label IF_END0
push constant 0
return
function Obstacle.touched 4
push argument 0
pop pointer 0
push argument 1
call Circle.getX 1
push argument 1
call Circle.getSize 1
add
push this 0
lt
pop local 0
push argument 1
call Circle.getX 1
push this 0
push this 2
add
gt
pop local 1
push argument 1
call Circle.getY 1
push argument 1
call Circle.getSize 1
add
push this 1
lt
pop local 2
push argument 1
call Circle.getY 1
push this 1
push constant 10
add
gt
pop local 3
push local 0
push local 1
or
push local 2
or
push local 3
or
not
return
function Obstacle.getY 0
push argument 0
pop pointer 0
push this 1
return
